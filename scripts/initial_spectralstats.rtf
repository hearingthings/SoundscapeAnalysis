{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf360
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red96\green96\blue96;
\red255\green102\blue0;\red0\green0\blue191;\red0\green0\blue255;\red51\green51\blue191;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 //version 1\cf3 \
p = \cf4 "/Users/blank/projects/recordings/onCars/rear_4-12-2011.wav"\cf3 ;\
\cf5 ~outpath\cf3  = \cf4 "rear_4-12-2011(5-50-95).txt"\cf3 .resolveRelative;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf3 \
\cf2 //version 2\cf3 \
p = \cf4 "/Users/danielstclair/projects/soundscapeSensor/longRecordings/MayZoom/excerpts_fortest/20mins.wav"\cf3 ;
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf5 ~outpath\cf3  = \cf4 "20mintest.txt"\cf3 .resolveRelative;\
\
//version 3 - fucking huge!!!\
p = "/Users/danielstclair/projects/soundscapeSensor/longRecordings/MayZoom/FOLDER01/STE-000.wav";\
~outpath = "hugetest.txt";\
\
\
\
\cf5 ~startFreq\cf3  = 20; 	\cf2 //16 is ~20cps, 28 is 41hz\cf3 \
\cf5 ~endFreq\cf3  = 20000;		\cf2 //135 is ~20000cps\cf3 \
\pard\pardeftab720\ri0\ql\qnatural
\cf5 ~bandWidthSemitones\cf3  = 4;\
\
\cf5 ~percentiles\cf3  = [1, 50, 99];\
\
\cf5 ~percentileArg\cf3  = \cf5 ~percentiles\cf3 /100;\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 f = \cf6 SoundFile\cf3 .new(p);\
\
f.openRead;\
n = f.numFrames;\
z = 8192;\
h = 1;\
n = n / (z * h);\
\
a = \cf6 Signal\cf3 .hammingWindow(z, 0);\
c = \cf6 Signal\cf3 .fftCosTable(z);\
\pard\pardeftab720\ri0\ql\qnatural
\cf3 \
\
\cf5 ~bands\cf3  = (\cf5 ~startFreq\cf3 .cpsmidi, \cf5 ~startFreq\cf3 .cpsmidi+\cf5 ~bandWidthSemitones\cf3 ..\cf5 ~endFreq\cf3 .cpsmidi);\
 \
\cf5 ~bands\cf3  = \cf5 ~bands\cf3 .midicps;\
\cf5 ~bandsAsFreqs\cf3  = \cf5 ~bands\cf3 ;\
\cf5 ~bandsAsFreqs\cf3  = \cf5 ~bandsAsFreqs\cf3 .round(0.1);\
\cf5 ~freqToBin\cf3  = \{ \cf7 |freq, fftSize, sr=44100|\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf3 	\cf7 var\cf3  bin = (freq/(sr/2)) * fftSize;\
	bin = bin.floor.asInteger;
\fs24 		\
\pard\pardeftab720\ri0\ql\qnatural
\cf3 \}; \
\cf5 ~bands\cf3  = \cf5 ~bands\cf3 .collect\{ \cf7 |band|\cf3  \cf5 ~freqToBin\cf3 .value(band, z/2) \};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 \
r = n.asInteger.collect\{ \cf7 |index|\cf3 \
	\cf7 var\cf3  start  = index * (z*h);\
	\cf7 var\cf3  end = start + z;\
	\cf7 var\cf3  data = \cf6 FloatArray\cf3 .newClear(z);\
	\cf7 var\cf3  imag = \cf6 Signal\cf3 .newClear(z);\
	\cf7 var\cf3  bands;\
	\
	f.seek(start, 0);\
	f.readData(data);\
\
	\
	data = \cf6 Signal\cf3 .newFrom(data);\
	data = data * a;\
	data = data.fft( imag, c);\
	data = data.magnitude[0..(z/2).asInteger];\
	\
	bands = \cf6 Array\cf3 .newClear(\cf5 ~bands\cf3 .size-1);\
	\
	\cf5 ~bands\cf3 .doAdjacentPairs\{ \cf7 |b1, b2, i|\cf3 \
		\cf7 var\cf3  nBands = b2-b1;\
		\cf7 var\cf3  lo = b1, hi = b2-1;\
		\cf7 var\cf3  band = data[lo..hi];\
		band = band.mean;\
		bands.put(i, band);\
	\};\
	\
	bands\
\};\
\
f.close;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf5 ~magTodB\cf3  = \{ \cf7 |mag, reference = 0|\cf3 \
	20 * log10(mag/reference)\
\};\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf3 \
t = r.flop;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf3 t = t.collect\{ \cf7 |r|\cf3  r.collect\{\cf7 |mag|\cf3  \cf5 ~magTodB\cf3 .value(mag, 100) \} \};
\fs24 \
\
\
u = t.collect\{ \cf7 |bin|\cf3  bin.
\fs18 percentile(\cf5 ~
\fs24 \cf5 percentileArg
\fs18 \cf3 )
\fs24  \};\
\
v = u.flop;\
\
v.multiplot(\cf5 ~percentiles\cf3 .collect(\cf6 _\cf3 .asString), drawLines: \cf8 true\cf3 );\
\
\
(\
f = \cf6 File\cf3 .new(\cf5 ~outpath\cf3 , \cf4 "w"\cf3 );\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //WRITE THE HEADER\cf3 \
f.write(\cf4 "bin-freqs,"\cf3 );\
\
\cf5 ~percentiles\cf3 .do\{ \cf7 |pc, i|\cf3 \
	f.write(pc.asString);\
	if (i != \cf5 ~percentiles\cf3 .lastIndex)\
		\{\
			f.write(\cf4 ","\cf3 );\
		\} \{\
			f.write(10.asAscii);	\
		\};	\
\};\
\
\cf2 //WRITE THE DATA\cf3 \
u.do\{ \cf7 |binVals, i|\cf3 \
	\cf7 var\cf3  binFreqString = \cf5 ~bandsAsFreqs\cf3 [i].asString;\
	f.write(binFreqString ++ \cf4 ","\cf3 );\
	binVals.do\{ \cf7 |val, bi|\cf3 \
		f.write(val.asString);\
		if (bi != binVals.lastIndex)\
			\{\
				f.write(\cf4 ","\cf3 );\
			\} \{\
				f.write(10.asAscii);\
			\};		\
	\};\
\};\
\
\cf2 //~bands.doAdjacentPairs\{ |f1, f2, i|\cf3 \
\cf2 //	f.write(f1.asString + "-" + f2);\cf3 \
\cf2 //	f.write(",");	\cf3 \
\cf2 //\};\cf3 \
\cf2 //\cf3 \
\cf2 //f.write("/n");\cf3 \
\cf2 //\cf3 \
\cf2 //v.do\{ |row| row.do\{ |val| f.write(val.asString); f.write(",") \}; f.write("/n") \};\cf3 \
\
f.close;\
)\
\
\
\
(\cf2 //HOW MUCH VARIANCE BETWEEN 95% AND 5%?\cf3 \
	\
(v[2] - v[0]).plot\
\
)\
\
\
\
\
\cf2 //\cf3 \
\cf2 //v.put(2, v[2].clip(0, 10))\cf3 \
\cf2 //v[2]}